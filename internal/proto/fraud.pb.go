// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fraud.proto

package fraud

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type HealthCheckResponse_ServingStatus int32

const (
	HealthCheckResponse_UNKNOWN         HealthCheckResponse_ServingStatus = 0
	HealthCheckResponse_SERVING         HealthCheckResponse_ServingStatus = 1
	HealthCheckResponse_NOT_SERVING     HealthCheckResponse_ServingStatus = 2
	HealthCheckResponse_SERVICE_UNKNOWN HealthCheckResponse_ServingStatus = 3
)

var HealthCheckResponse_ServingStatus_name = map[int32]string{
	0: "UNKNOWN",
	1: "SERVING",
	2: "NOT_SERVING",
	3: "SERVICE_UNKNOWN",
}

var HealthCheckResponse_ServingStatus_value = map[string]int32{
	"UNKNOWN":         0,
	"SERVING":         1,
	"NOT_SERVING":     2,
	"SERVICE_UNKNOWN": 3,
}

func (x HealthCheckResponse_ServingStatus) String() string {
	return proto.EnumName(HealthCheckResponse_ServingStatus_name, int32(x))
}

func (HealthCheckResponse_ServingStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4990aeb1c634d577, []int{4, 0}
}

type PodInfo struct {
	IpAddress            string   `protobuf:"bytes,1,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	PodName              string   `protobuf:"bytes,2,opt,name=pod_name,json=podName,proto3" json:"pod_name,omitempty"`
	AvailabilityZone     string   `protobuf:"bytes,3,opt,name=availability_zone,json=availabilityZone,proto3" json:"availability_zone,omitempty"`
	GrpcHost             string   `protobuf:"bytes,4,opt,name=grpc_host,json=grpcHost,proto3" json:"grpc_host,omitempty"`
	Version              string   `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PodInfo) Reset()         { *m = PodInfo{} }
func (m *PodInfo) String() string { return proto.CompactTextString(m) }
func (*PodInfo) ProtoMessage()    {}
func (*PodInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_4990aeb1c634d577, []int{0}
}

func (m *PodInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PodInfo.Unmarshal(m, b)
}
func (m *PodInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PodInfo.Marshal(b, m, deterministic)
}
func (m *PodInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PodInfo.Merge(m, src)
}
func (m *PodInfo) XXX_Size() int {
	return xxx_messageInfo_PodInfo.Size(m)
}
func (m *PodInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PodInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PodInfo proto.InternalMessageInfo

func (m *PodInfo) GetIpAddress() string {
	if m != nil {
		return m.IpAddress
	}
	return ""
}

func (m *PodInfo) GetPodName() string {
	if m != nil {
		return m.PodName
	}
	return ""
}

func (m *PodInfo) GetAvailabilityZone() string {
	if m != nil {
		return m.AvailabilityZone
	}
	return ""
}

func (m *PodInfo) GetGrpcHost() string {
	if m != nil {
		return m.GrpcHost
	}
	return ""
}

func (m *PodInfo) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type PodInfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PodInfoRequest) Reset()         { *m = PodInfoRequest{} }
func (m *PodInfoRequest) String() string { return proto.CompactTextString(m) }
func (*PodInfoRequest) ProtoMessage()    {}
func (*PodInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4990aeb1c634d577, []int{1}
}

func (m *PodInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PodInfoRequest.Unmarshal(m, b)
}
func (m *PodInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PodInfoRequest.Marshal(b, m, deterministic)
}
func (m *PodInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PodInfoRequest.Merge(m, src)
}
func (m *PodInfoRequest) XXX_Size() int {
	return xxx_messageInfo_PodInfoRequest.Size(m)
}
func (m *PodInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PodInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PodInfoRequest proto.InternalMessageInfo

type PodInfoResponse struct {
	PodInfo              *PodInfo `protobuf:"bytes,1,opt,name=podInfo,proto3" json:"podInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PodInfoResponse) Reset()         { *m = PodInfoResponse{} }
func (m *PodInfoResponse) String() string { return proto.CompactTextString(m) }
func (*PodInfoResponse) ProtoMessage()    {}
func (*PodInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4990aeb1c634d577, []int{2}
}

func (m *PodInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PodInfoResponse.Unmarshal(m, b)
}
func (m *PodInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PodInfoResponse.Marshal(b, m, deterministic)
}
func (m *PodInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PodInfoResponse.Merge(m, src)
}
func (m *PodInfoResponse) XXX_Size() int {
	return xxx_messageInfo_PodInfoResponse.Size(m)
}
func (m *PodInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PodInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PodInfoResponse proto.InternalMessageInfo

func (m *PodInfoResponse) GetPodInfo() *PodInfo {
	if m != nil {
		return m.PodInfo
	}
	return nil
}

type HealthCheckRequest struct {
	Service              string   `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HealthCheckRequest) Reset()         { *m = HealthCheckRequest{} }
func (m *HealthCheckRequest) String() string { return proto.CompactTextString(m) }
func (*HealthCheckRequest) ProtoMessage()    {}
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4990aeb1c634d577, []int{3}
}

func (m *HealthCheckRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthCheckRequest.Unmarshal(m, b)
}
func (m *HealthCheckRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthCheckRequest.Marshal(b, m, deterministic)
}
func (m *HealthCheckRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthCheckRequest.Merge(m, src)
}
func (m *HealthCheckRequest) XXX_Size() int {
	return xxx_messageInfo_HealthCheckRequest.Size(m)
}
func (m *HealthCheckRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthCheckRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HealthCheckRequest proto.InternalMessageInfo

func (m *HealthCheckRequest) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

type HealthCheckResponse struct {
	Status               HealthCheckResponse_ServingStatus `protobuf:"varint,1,opt,name=status,proto3,enum=fraud.HealthCheckResponse_ServingStatus" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *HealthCheckResponse) Reset()         { *m = HealthCheckResponse{} }
func (m *HealthCheckResponse) String() string { return proto.CompactTextString(m) }
func (*HealthCheckResponse) ProtoMessage()    {}
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4990aeb1c634d577, []int{4}
}

func (m *HealthCheckResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthCheckResponse.Unmarshal(m, b)
}
func (m *HealthCheckResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthCheckResponse.Marshal(b, m, deterministic)
}
func (m *HealthCheckResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthCheckResponse.Merge(m, src)
}
func (m *HealthCheckResponse) XXX_Size() int {
	return xxx_messageInfo_HealthCheckResponse.Size(m)
}
func (m *HealthCheckResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthCheckResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HealthCheckResponse proto.InternalMessageInfo

func (m *HealthCheckResponse) GetStatus() HealthCheckResponse_ServingStatus {
	if m != nil {
		return m.Status
	}
	return HealthCheckResponse_UNKNOWN
}

type Payment struct {
	AccountId            string   `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	CardNumber           string   `protobuf:"bytes,2,opt,name=card_number,json=cardNumber,proto3" json:"card_number,omitempty"`
	CardType             string   `protobuf:"bytes,3,opt,name=card_type,json=cardType,proto3" json:"card_type,omitempty"`
	Currency             string   `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	Mcc                  string   `protobuf:"bytes,5,opt,name=mcc,proto3" json:"mcc,omitempty"`
	Amount               string   `protobuf:"bytes,6,opt,name=amount,proto3" json:"amount,omitempty"`
	Status               string   `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Payment) Reset()         { *m = Payment{} }
func (m *Payment) String() string { return proto.CompactTextString(m) }
func (*Payment) ProtoMessage()    {}
func (*Payment) Descriptor() ([]byte, []int) {
	return fileDescriptor_4990aeb1c634d577, []int{5}
}

func (m *Payment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Payment.Unmarshal(m, b)
}
func (m *Payment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Payment.Marshal(b, m, deterministic)
}
func (m *Payment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Payment.Merge(m, src)
}
func (m *Payment) XXX_Size() int {
	return xxx_messageInfo_Payment.Size(m)
}
func (m *Payment) XXX_DiscardUnknown() {
	xxx_messageInfo_Payment.DiscardUnknown(m)
}

var xxx_messageInfo_Payment proto.InternalMessageInfo

func (m *Payment) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *Payment) GetCardNumber() string {
	if m != nil {
		return m.CardNumber
	}
	return ""
}

func (m *Payment) GetCardType() string {
	if m != nil {
		return m.CardType
	}
	return ""
}

func (m *Payment) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *Payment) GetMcc() string {
	if m != nil {
		return m.Mcc
	}
	return ""
}

func (m *Payment) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *Payment) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type PaymentRequest struct {
	Payment              *Payment `protobuf:"bytes,1,opt,name=payment,proto3" json:"payment,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PaymentRequest) Reset()         { *m = PaymentRequest{} }
func (m *PaymentRequest) String() string { return proto.CompactTextString(m) }
func (*PaymentRequest) ProtoMessage()    {}
func (*PaymentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4990aeb1c634d577, []int{6}
}

func (m *PaymentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentRequest.Unmarshal(m, b)
}
func (m *PaymentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentRequest.Marshal(b, m, deterministic)
}
func (m *PaymentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentRequest.Merge(m, src)
}
func (m *PaymentRequest) XXX_Size() int {
	return xxx_messageInfo_PaymentRequest.Size(m)
}
func (m *PaymentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentRequest proto.InternalMessageInfo

func (m *PaymentRequest) GetPayment() *Payment {
	if m != nil {
		return m.Payment
	}
	return nil
}

type PaymentResponse struct {
	Payment              *Payment `protobuf:"bytes,1,opt,name=payment,proto3" json:"payment,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PaymentResponse) Reset()         { *m = PaymentResponse{} }
func (m *PaymentResponse) String() string { return proto.CompactTextString(m) }
func (*PaymentResponse) ProtoMessage()    {}
func (*PaymentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4990aeb1c634d577, []int{7}
}

func (m *PaymentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentResponse.Unmarshal(m, b)
}
func (m *PaymentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentResponse.Marshal(b, m, deterministic)
}
func (m *PaymentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentResponse.Merge(m, src)
}
func (m *PaymentResponse) XXX_Size() int {
	return xxx_messageInfo_PaymentResponse.Size(m)
}
func (m *PaymentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentResponse proto.InternalMessageInfo

func (m *PaymentResponse) GetPayment() *Payment {
	if m != nil {
		return m.Payment
	}
	return nil
}

func init() {
	proto.RegisterEnum("fraud.HealthCheckResponse_ServingStatus", HealthCheckResponse_ServingStatus_name, HealthCheckResponse_ServingStatus_value)
	proto.RegisterType((*PodInfo)(nil), "fraud.PodInfo")
	proto.RegisterType((*PodInfoRequest)(nil), "fraud.PodInfoRequest")
	proto.RegisterType((*PodInfoResponse)(nil), "fraud.PodInfoResponse")
	proto.RegisterType((*HealthCheckRequest)(nil), "fraud.HealthCheckRequest")
	proto.RegisterType((*HealthCheckResponse)(nil), "fraud.HealthCheckResponse")
	proto.RegisterType((*Payment)(nil), "fraud.Payment")
	proto.RegisterType((*PaymentRequest)(nil), "fraud.PaymentRequest")
	proto.RegisterType((*PaymentResponse)(nil), "fraud.PaymentResponse")
}

func init() { proto.RegisterFile("fraud.proto", fileDescriptor_4990aeb1c634d577) }

var fileDescriptor_4990aeb1c634d577 = []byte{
	// 544 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x94, 0xdd, 0x6a, 0x13, 0x41,
	0x14, 0xc7, 0xb3, 0x8d, 0xf9, 0x3a, 0xd1, 0x24, 0x9d, 0x62, 0xd9, 0x46, 0x44, 0xd9, 0xab, 0x80,
	0x10, 0x64, 0xbd, 0x53, 0x94, 0x4a, 0xad, 0x6d, 0x10, 0x37, 0x92, 0xd4, 0x16, 0xbc, 0x59, 0x26,
	0xb3, 0xd3, 0x66, 0x31, 0x3b, 0xb3, 0xce, 0xcc, 0x06, 0xd6, 0x47, 0xf0, 0x45, 0xf4, 0x41, 0x7c,
	0x30, 0x99, 0xd9, 0x99, 0xb6, 0x09, 0x15, 0xc4, 0xbb, 0x9c, 0xff, 0xf9, 0x9c, 0xf3, 0x3b, 0x59,
	0xe8, 0x5e, 0x0a, 0x5c, 0x24, 0xe3, 0x5c, 0x70, 0xc5, 0x51, 0xc3, 0x18, 0xc1, 0x4f, 0x0f, 0x5a,
	0x9f, 0x78, 0x32, 0x61, 0x97, 0x1c, 0x3d, 0x06, 0x48, 0xf3, 0x18, 0x27, 0x89, 0xa0, 0x52, 0xfa,
	0xde, 0x53, 0x6f, 0xd4, 0x99, 0x75, 0xd2, 0xfc, 0x6d, 0x25, 0xa0, 0x03, 0x68, 0xe7, 0x3c, 0x89,
	0x19, 0xce, 0xa8, 0xbf, 0x63, 0x9c, 0xad, 0x9c, 0x27, 0x11, 0xce, 0x28, 0x7a, 0x06, 0xbb, 0x78,
	0x8d, 0xd3, 0x15, 0x5e, 0xa4, 0xab, 0x54, 0x95, 0xf1, 0x77, 0xce, 0xa8, 0x5f, 0x37, 0x31, 0x83,
	0xdb, 0x8e, 0x2f, 0x9c, 0x51, 0xf4, 0x08, 0x3a, 0x57, 0x22, 0x27, 0xf1, 0x92, 0x4b, 0xe5, 0xdf,
	0x33, 0x41, 0x6d, 0x2d, 0x9c, 0x72, 0xa9, 0x90, 0x0f, 0xad, 0x35, 0x15, 0x32, 0xe5, 0xcc, 0x6f,
	0x54, 0x3d, 0xac, 0x19, 0x0c, 0xa0, 0x67, 0x07, 0x9d, 0xd1, 0x6f, 0x05, 0x95, 0x2a, 0x78, 0x05,
	0xfd, 0x6b, 0x45, 0xe6, 0x9c, 0x49, 0x8a, 0x46, 0xa0, 0x67, 0xd2, 0x92, 0x99, 0xbf, 0x1b, 0xf6,
	0xc6, 0xd5, 0xa3, 0x5d, 0xa0, 0x73, 0x07, 0x63, 0x40, 0xa7, 0x14, 0xaf, 0xd4, 0xf2, 0x68, 0x49,
	0xc9, 0x57, 0x5b, 0x52, 0xb7, 0x97, 0x54, 0xac, 0x53, 0x42, 0xed, 0xfb, 0x9d, 0x19, 0xfc, 0xf2,
	0x60, 0x6f, 0x23, 0xc1, 0x76, 0x3c, 0x84, 0xa6, 0x54, 0x58, 0x15, 0xd5, 0xc2, 0x7a, 0xe1, 0xc8,
	0x36, 0xbc, 0x23, 0x76, 0x3c, 0xd7, 0xb5, 0xd8, 0xd5, 0xdc, 0xc4, 0xcf, 0x6c, 0x5e, 0x30, 0x85,
	0x07, 0x1b, 0x0e, 0xd4, 0x85, 0xd6, 0xe7, 0xe8, 0x43, 0x34, 0xbd, 0x88, 0x06, 0x35, 0x6d, 0xcc,
	0x8f, 0x67, 0xe7, 0x93, 0xe8, 0x64, 0xe0, 0xa1, 0x3e, 0x74, 0xa3, 0xe9, 0x59, 0xec, 0x84, 0x1d,
	0xb4, 0x07, 0x7d, 0x63, 0x1c, 0x1d, 0xc7, 0x2e, 0xa5, 0x1e, 0xfc, 0xd6, 0x4c, 0x71, 0x99, 0x51,
	0xa6, 0x34, 0x53, 0x4c, 0x08, 0x2f, 0x98, 0x8a, 0xd3, 0xc4, 0x31, 0xb5, 0xca, 0x24, 0x41, 0x4f,
	0xa0, 0x4b, 0xb0, 0x48, 0x62, 0x56, 0x64, 0x0b, 0x2a, 0x2c, 0x56, 0xd0, 0x52, 0x64, 0x14, 0x0d,
	0xcb, 0x04, 0xa8, 0x32, 0x77, 0x44, 0xdb, 0x5a, 0x38, 0x2b, 0x73, 0x8a, 0x86, 0xd0, 0x26, 0x85,
	0x10, 0x94, 0x91, 0xd2, 0x81, 0x74, 0x36, 0x1a, 0x40, 0x3d, 0x23, 0xc4, 0x42, 0xd4, 0x3f, 0xd1,
	0x3e, 0x34, 0x71, 0xa6, 0xfb, 0xfa, 0x4d, 0x23, 0x5a, 0x4b, 0xeb, 0x76, 0x83, 0xad, 0x4a, 0xb7,
	0x7b, 0x79, 0x09, 0x3d, 0xfb, 0x0a, 0x47, 0x47, 0xd3, 0xad, 0x94, 0x6d, 0xba, 0x36, 0xce, 0xb9,
	0xcd, 0x69, 0xb8, 0xdc, 0x5b, 0xa7, 0xf1, 0x4f, 0xc9, 0xe1, 0x0f, 0x0f, 0x9a, 0x15, 0x3e, 0xf4,
	0x06, 0x1a, 0x06, 0x21, 0x3a, 0xb8, 0x0b, 0xab, 0x99, 0x6a, 0x38, 0xfc, 0x3b, 0x71, 0x74, 0x08,
	0x8d, 0x0b, 0xac, 0xc8, 0xf2, 0x3f, 0xf3, 0x9f, 0x7b, 0xe1, 0x47, 0xb8, 0xff, 0x5e, 0xbb, 0xe7,
	0xd5, 0x1d, 0xa2, 0xd7, 0x00, 0x27, 0x54, 0xb9, 0xbf, 0xec, 0xc3, 0xad, 0xf3, 0xb6, 0x25, 0xf7,
	0xb7, 0xe5, 0xaa, 0x5c, 0x50, 0x0b, 0xcf, 0xaf, 0x97, 0xea, 0x0a, 0xbe, 0x83, 0x5d, 0xd3, 0xd3,
	0xca, 0xa6, 0xd9, 0x4d, 0xdd, 0x0d, 0x00, 0x37, 0x75, 0x37, 0x77, 0x1b, 0xd4, 0x16, 0x4d, 0xf3,
	0x55, 0x79, 0xf1, 0x27, 0x00, 0x00, 0xff, 0xff, 0x14, 0xfa, 0xa1, 0x25, 0x64, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HealthClient is the client API for Health service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HealthClient interface {
	Check(ctx context.Context, in *HealthCheckRequest, opts ...grpc.CallOption) (*HealthCheckResponse, error)
	Watch(ctx context.Context, in *HealthCheckRequest, opts ...grpc.CallOption) (Health_WatchClient, error)
}

type healthClient struct {
	cc *grpc.ClientConn
}

func NewHealthClient(cc *grpc.ClientConn) HealthClient {
	return &healthClient{cc}
}

func (c *healthClient) Check(ctx context.Context, in *HealthCheckRequest, opts ...grpc.CallOption) (*HealthCheckResponse, error) {
	out := new(HealthCheckResponse)
	err := c.cc.Invoke(ctx, "/fraud.Health/Check", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *healthClient) Watch(ctx context.Context, in *HealthCheckRequest, opts ...grpc.CallOption) (Health_WatchClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Health_serviceDesc.Streams[0], "/fraud.Health/Watch", opts...)
	if err != nil {
		return nil, err
	}
	x := &healthWatchClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Health_WatchClient interface {
	Recv() (*HealthCheckResponse, error)
	grpc.ClientStream
}

type healthWatchClient struct {
	grpc.ClientStream
}

func (x *healthWatchClient) Recv() (*HealthCheckResponse, error) {
	m := new(HealthCheckResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// HealthServer is the server API for Health service.
type HealthServer interface {
	Check(context.Context, *HealthCheckRequest) (*HealthCheckResponse, error)
	Watch(*HealthCheckRequest, Health_WatchServer) error
}

// UnimplementedHealthServer can be embedded to have forward compatible implementations.
type UnimplementedHealthServer struct {
}

func (*UnimplementedHealthServer) Check(ctx context.Context, req *HealthCheckRequest) (*HealthCheckResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Check not implemented")
}
func (*UnimplementedHealthServer) Watch(req *HealthCheckRequest, srv Health_WatchServer) error {
	return status.Errorf(codes.Unimplemented, "method Watch not implemented")
}

func RegisterHealthServer(s *grpc.Server, srv HealthServer) {
	s.RegisterService(&_Health_serviceDesc, srv)
}

func _Health_Check_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HealthCheckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HealthServer).Check(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fraud.Health/Check",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HealthServer).Check(ctx, req.(*HealthCheckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Health_Watch_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(HealthCheckRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(HealthServer).Watch(m, &healthWatchServer{stream})
}

type Health_WatchServer interface {
	Send(*HealthCheckResponse) error
	grpc.ServerStream
}

type healthWatchServer struct {
	grpc.ServerStream
}

func (x *healthWatchServer) Send(m *HealthCheckResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _Health_serviceDesc = grpc.ServiceDesc{
	ServiceName: "fraud.Health",
	HandlerType: (*HealthServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Check",
			Handler:    _Health_Check_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Watch",
			Handler:       _Health_Watch_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "fraud.proto",
}

// FraudServiceClient is the client API for FraudService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FraudServiceClient interface {
	GetPodInfo(ctx context.Context, in *PodInfoRequest, opts ...grpc.CallOption) (*PodInfoResponse, error)
}

type fraudServiceClient struct {
	cc *grpc.ClientConn
}

func NewFraudServiceClient(cc *grpc.ClientConn) FraudServiceClient {
	return &fraudServiceClient{cc}
}

func (c *fraudServiceClient) GetPodInfo(ctx context.Context, in *PodInfoRequest, opts ...grpc.CallOption) (*PodInfoResponse, error) {
	out := new(PodInfoResponse)
	err := c.cc.Invoke(ctx, "/fraud.FraudService/GetPodInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FraudServiceServer is the server API for FraudService service.
type FraudServiceServer interface {
	GetPodInfo(context.Context, *PodInfoRequest) (*PodInfoResponse, error)
}

// UnimplementedFraudServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFraudServiceServer struct {
}

func (*UnimplementedFraudServiceServer) GetPodInfo(ctx context.Context, req *PodInfoRequest) (*PodInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPodInfo not implemented")
}

func RegisterFraudServiceServer(s *grpc.Server, srv FraudServiceServer) {
	s.RegisterService(&_FraudService_serviceDesc, srv)
}

func _FraudService_GetPodInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PodInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FraudServiceServer).GetPodInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fraud.FraudService/GetPodInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FraudServiceServer).GetPodInfo(ctx, req.(*PodInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FraudService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "fraud.FraudService",
	HandlerType: (*FraudServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPodInfo",
			Handler:    _FraudService_GetPodInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "fraud.proto",
}

// PaymentServiceClient is the client API for PaymentService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PaymentServiceClient interface {
	CheckPaymentFraud(ctx context.Context, in *PaymentRequest, opts ...grpc.CallOption) (*PaymentResponse, error)
}

type paymentServiceClient struct {
	cc *grpc.ClientConn
}

func NewPaymentServiceClient(cc *grpc.ClientConn) PaymentServiceClient {
	return &paymentServiceClient{cc}
}

func (c *paymentServiceClient) CheckPaymentFraud(ctx context.Context, in *PaymentRequest, opts ...grpc.CallOption) (*PaymentResponse, error) {
	out := new(PaymentResponse)
	err := c.cc.Invoke(ctx, "/fraud.PaymentService/CheckPaymentFraud", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PaymentServiceServer is the server API for PaymentService service.
type PaymentServiceServer interface {
	CheckPaymentFraud(context.Context, *PaymentRequest) (*PaymentResponse, error)
}

// UnimplementedPaymentServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPaymentServiceServer struct {
}

func (*UnimplementedPaymentServiceServer) CheckPaymentFraud(ctx context.Context, req *PaymentRequest) (*PaymentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckPaymentFraud not implemented")
}

func RegisterPaymentServiceServer(s *grpc.Server, srv PaymentServiceServer) {
	s.RegisterService(&_PaymentService_serviceDesc, srv)
}

func _PaymentService_CheckPaymentFraud_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PaymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentServiceServer).CheckPaymentFraud(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fraud.PaymentService/CheckPaymentFraud",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentServiceServer).CheckPaymentFraud(ctx, req.(*PaymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PaymentService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "fraud.PaymentService",
	HandlerType: (*PaymentServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CheckPaymentFraud",
			Handler:    _PaymentService_CheckPaymentFraud_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "fraud.proto",
}
